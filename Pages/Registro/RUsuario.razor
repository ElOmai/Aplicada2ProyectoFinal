@page "/Registro/Usuarios"
@page "/Registro/Usuarios/{UsuarioId:int}"
<div class="form-register">
    <h3>Usuarios</h3>
    <EditForm Model="@Usuario" OnValidSubmit="Guardar">
        <DataAnnotationsValidator />
        <label class="text-muted form-text">@Mensaje</label>
        <div class="form-group">
            <label> UsuarioId</label>
            <InputNumber class="form-control" @bind-Value="Usuario.UsuarioId"></InputNumber>
            <ValidationMessage For="(() => Usuario.UsuarioId)" />
            <button type="button" class="btn btn-primary" @onclick="Buscar">Buscar</button>
        </div>

        <div class="form-group">
            <label>Nombre</label>
            <InputText class="form-control" @bind-Value="Usuario.Nombre"></InputText>
            <ValidationMessage For="(() => Usuario.Nombre)" />
        </div>

        <div class="form-group">
            <label>Email</label>
            <InputText class="form-control" @bind-Value="Usuario.Usuario"></InputText>
            <ValidationMessage For="(() => Usuario.Usuario)" />
        </div>

        <div class="form-group">
            <label>Clave</label>
            <InputText type="password" class="form-control" @bind-Value="Usuario.Contraseña"></InputText>
            <ValidationMessage For="(() => Usuario.Contraseña)" />
        </div>

        <div class="form-group">
            <label>Confirmar Clave</label>
            <InputText class="form-control" @bind-Value="Usuario.RepeatContraseña" type="password"></InputText>
            <ValidationMessage For="(() => Usuario.RepeatContraseña)" />
        </div>

        <div class="form-group">
            <label>Nivel de Usuario</label>
            <InputSelect class="form-control" @bind-Value="Usuario.TipodeUsuario">`
                <option value="Administrador">Administrador</option>
                <option value="Cajero">Cajero</option>
            </InputSelect>
            <ValidationMessage For="(() => Usuario.TipodeUsuario)" />

        </div>

        <div class="form-group">
            <label>Fecha de Ingreso</label>
            <InputDate class="form-control" @bind-Value="Usuario.Fecha"></InputDate>
            <ValidationMessage For="(() => Usuario.Fecha)" />
        </div>

        <div>
            <button type="button" class="btn btn-danger" @onclick="Limpiar">Nuevo</button>
            <button type="submit" class="btn btn-success">Guardar</button>
            <button type="button" class="btn btn-secondary" @onclick="Eliminar">Eliminar</button>
        </div>
        <h5 class="text-success">@Mensaje</h5>
    </EditForm>
</div>

@code {
    [Parameter]
    public int UsuarioId { get; set; }
    public string Mensaje = "";
    Usuarios Usuario = new Usuarios();
    UsuariosController controller = new UsuariosController();

   protected override void OnInitialized()
    {
        Limpiar();
        Mensaje = string.Empty;
        if (UsuarioId != 0)
        {
            Usuario = controller.Buscar(UsuarioId);
        }
    }
    private void Limpiar()
    {
        Usuario = new Usuarios();
    }

    public void Guardar()
    {
        if (controller.Guardar(Usuario))
        {
            Limpiar();
            Mensaje = "Usuario Guardado con Exito!!!";
        }
        else
        {
            Limpiar();
            Mensaje = "Error al guardar Usuario";
        }
    }

    public void Buscar()
    {
        var usuario = controller.Buscar(Usuario.UsuarioId);

        if (usuario != null)
        {
            Usuario = usuario;
        }
        else
        {
            Limpiar();
            Mensaje = "cliente no Existe";
        }
    }

    public void Eliminar()
    {
        var usuario = controller.Buscar(Usuario.UsuarioId);

        if (usuario != null)
        {
            controller.Eliminar(Usuario.UsuarioId);
            Limpiar();
            Mensaje = "Usuario Eliminado";
        }
        else
        {
            Limpiar();
            Mensaje = "Error al eliminar";
        }
    }
}